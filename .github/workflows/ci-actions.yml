name: CI

on:
  push:
    branches:
      - master
    tags-ignore:
      - "**"
  pull_request:
    branches:
      - master
    paths-ignore:
      - ".gitignore"
      - ".dockerignore"
  schedule:
    - cron: "0 0 * * *"

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build
        run: |
          yarn install
          yarn build
      - run: yarn test --coverage --watchAll=false
      - uses: codecov/codecov-action@v1
        with:
          flags: unitests

  e2e:
    needs: [unit-test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome, firefox]
    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
        ports:
          - 9200:9200
          - 9300:9300
        env:
          discovery.type: single-node
        options: >-
          --health-cmd "curl --fail http://localhost:9200 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      backend-db:
        image: postgres:13.1
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: searchpe_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      backend:
        image: quay.io/projectopenubl/searchpe:master
        ports:
          - 8080:8080
        env:
          QUARKUS_DATASOURCE_USERNAME: user
          QUARKUS_DATASOURCE_PASSWORD: password
          QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://backend-db:5432/searchpe_db
          QUARKUS_HIBERNATE_SEARCH_ORM_ELASTICSEARCH_USERNAME: any
          QUARKUS_HIBERNATE_SEARCH_ORM_ELASTICSEARCH_PASSWORD: any
          QUARKUS_HIBERNATE_SEARCH_ORM_ELASTICSEARCH_HOSTS: elasticsearch:9200
          QUARKUS_HIBERNATE_SEARCH_ORM_ELASTICSEARCH_PROTOCOL: HTTP
        options: >-
          --health-cmd "curl --fail http://localhost:8080 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          yarn install
          yarn build:instrumentation
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: false
          start: yarn run ui:start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          config: pageLoadTimeout=100000
          browser: ${{ matrix.browser }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v2.2.3
        if: failure()
        with:
          name: e2e-screenshots-${{ matrix.os }}-${{ matrix.browser }}
          path: cypress/screenshots
      - uses: actions/upload-artifact@v2.2.3
        if: always()
        with:
          name: e2e-videos-${{ matrix.os }}-${{ matrix.browser }}
          path: cypress/videos
      - uses: codecov/codecov-action@v1
        with:
          flags: e2etests

  electron:
    needs: [e2e]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x

      - name: Build
        run: |
          yarn install --network-timeout 1000000
          yarn build

      - name: renderer.js
        run: |
          echo 'window["SEARCHPE_API_URL"]=process.env.SEARCHPE_API_URL;' >> build/renderer.js
          mv build electron/

      - name: Electron
        run: |
          yarn --cwd electron/ install --network-timeout 1000000
          yarn --cwd electron/ run electron:make

      - name: Upload archive
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: searchpe-ui-deb
          path: electron/out/make/deb/**/**
      - name: Upload archive
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: searchpe-ui-rpm
          path: electron/out/make/rpm/**/**

      - name: Upload archive
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: searchpe-ui-windows
          path: electron/out/make/squirrel.windows/**/**
      - name: Upload archive
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: searchpe-ui-macos
          path: electron/out/make/zip/darwin/**/**

  container-images:
    if: ${{ github.event_name != 'pull_request' && github.repository_owner == 'project-openubl' }}
    runs-on: ubuntu-latest
    needs: [unit-test, e2e]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x
      - name: Build
        run: |
          yarn install
          yarn build
      - name: Push to Quay.io
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          registry: quay.io
          name: projectopenubl/searchpe-ui
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}
          dockerfile: Dockerfile
          snapshot: false
          tags: "master"
      - name: Push to GitHub Packages
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          registry: docker.pkg.github.com
          name: project-openubl/searchpe-ui/searchpe-ui
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: Dockerfile
          snapshot: false
          tags: "master"
      - name: Push to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          name: projectopenubl/searchpe-ui
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile
          snapshot: false
          tags: "master"
