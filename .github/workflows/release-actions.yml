name: Release

on:
  push:
    tags:
      - "*"

jobs:
  electron:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x

      - name: Build
        run: |
          yarn install --network-timeout 1000000
          yarn build

      - name: renderer.js
        run: |
          echo 'window["SEARCHPE_API_URL"]=process.env.SEARCHPE_API_URL;' >> build/renderer.js
          mv build electron/

      - name: Electron
        run: |
          yarn --cwd electron/ install --network-timeout 1000000
          yarn --cwd electron/ run electron:make

      - name: Prepare rpm and deb
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mv electron/out/make/deb/x64/*.deb electron/out/make/deb/x64/searchpe-ui.deb
          mv electron/out/make/rpm/x64/*.rpm electron/out/make/rpm/x64/searchpe-ui.rpm
      - name: Upload deb
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: searchpe-ui-deb
          path: electron/out/make/deb/x64/searchpe-ui.deb
      - name: Upload rpm
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: searchpe-ui-rpm
          path: electron/out/make/rpm/x64/searchpe-ui.rpm

      - name: Prepare windows zip
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        run: 7z a -tzip searchpe-ui-windows.zip ./electron/out/make/squirrel.windows/x64/*
      - name: Upload windows archive
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: searchpe-ui-windows
          path: searchpe-ui-windows.zip

      - name: Prepare macos zip
        if: ${{ matrix.os == 'macos-latest' }}
        run: mv electron/out/make/zip/darwin/x64/*.zip searchpe-ui-macos.zip
      - name: Upload archive
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: searchpe-ui-macos
          path: searchpe-ui-macos.zip

  container-image:
    name: Container images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x
      - name: Build
        run: |
          yarn install
          yarn build

      - name: Push to Quay.io
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          registry: quay.io
          name: projectopenubl/searchpe-ui
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}
          dockerfile: Dockerfile
          snapshot: false
          tag_names: true
      - name: Push to Quay.io
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          registry: quay.io
          name: projectopenubl/searchpe-ui
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}
          dockerfile: Dockerfile
          snapshot: false
          tags: "latest"

      - name: Push to GitHub Packages
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          registry: docker.pkg.github.com
          name: project-openubl/searchpe-ui/searchpe-ui
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: Dockerfile
          snapshot: false
          tag_names: true
      - name: Push to GitHub Packages
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          registry: docker.pkg.github.com
          name: project-openubl/searchpe-ui/searchpe-ui
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: Dockerfile
          snapshot: false
          tags: "latest"

      - name: Push to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          name: projectopenubl/searchpe-ui
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile
          snapshot: false
          tag_names: true
      - name: Push to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          name: projectopenubl/searchpe-ui
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile
          snapshot: false
          tags: "latest"

  release-gh:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [electron, container-image]
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Upload deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: searchpe-ui-deb/searchpe-ui.deb
          asset_name: searchpe-ui-${{ steps.get_version.outputs.VERSION }}.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: searchpe-ui-rpm/searchpe-ui.rpm
          asset_name: searchpe-ui-${{ steps.get_version.outputs.VERSION }}.rpm
          asset_content_type: application/x-rpm
      - name: Upload windows zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: searchpe-ui-windows/searchpe-ui-windows.zip
          asset_name: searchpe-ui-${{ steps.get_version.outputs.VERSION }}-windows.zip
          asset_content_type: application/zip
      - name: Upload macos zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: searchpe-ui-macos/searchpe-ui-macos.zip
          asset_name: searchpe-ui-${{ steps.get_version.outputs.VERSION }}-macos.zip
          asset_content_type: application/zip
